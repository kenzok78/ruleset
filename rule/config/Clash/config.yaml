proxy-providers:
  Airport_01:
    type: http
    interval: 1800
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 🟢 直连
    url: "订阅链接1"
  Airport_02:
    type: http
    interval: 1800
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 🟢 直连
    url: "订阅链接2"
   
# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
ipv6: false
allow-lan: true
unified-delay: true
tcp-concurrent: true
  
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
  
# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: ui
external-ui-url: "https://ghp.ci/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 匹配进程 always/strict/off
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true
  
# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    
# 代理模式
tun:
  enable: true
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  
# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - geosite:private
    - geosite:cn
  default-nameserver:
    - 119.29.29.29
    - 223.5.5.5
  proxy-server-nameserver:
    - 119.29.29.29
    - 223.5.5.5
  nameserver:
    - 119.29.29.29
    - 223.5.5.5
  nameserver-policy:
    "rule-set:private_domain,cn_domain":
      - 119.29.29.29
      - 223.5.5.5
    "rule-set:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query"
      - "https://dns.google/dns-query"
    "rule-set:ai":
      - "https://dns.cloudflare.com/dns-query"
      - "https://dns.google/dns-query"
 
# 锚点
pr: &pr {type: select, proxies: [节点选择, 自动选择, 香港节点, 日本节点, 美国节点]}
# 策略组
proxy-groups:
  # 基础策略组
  - {name: 节点选择, type: select, proxies: [自动选择, 香港节点, 日本节点, 美国节点]}
  - {name: 全球直连, type: select, proxies: [直连, 节点选择]}
  - {name: 列表之外,!!merge <<: *pr}
  
  # 应用策略组
  - {name: YouTube,!!merge <<: *pr}
  - {name: ChatGPT,!!merge <<: *pr}
  - {name: Microsoft, type: select, proxies: [直连, 节点选择]}
  - {name: TikTok,!!merge <<: *pr}
  - {name: NETFLIX,!!merge <<: *pr}
  - {name: PayPal,!!merge <<: *pr}
  - {name: Apple, type: select, proxies: [直连, 节点选择]}
  
  # AI专用策略组
  - {name: OpenAI专用, type: select, proxies: [美国节点, 日本节点]}
  - {name: Claude专用, type: select, proxies: [美国节点]}
  - {name: Gemini专用, type: select, proxies: [美国节点, 日本节点]}
  
  # 地区分组
  - {name: 香港节点, type: url-test, include-all: true, tolerance: 15, interval: 180, filter: "(?i)港|hongkong|hong kong|hk"}
  - {name: 日本节点, type: url-test, include-all: true, tolerance: 15, interval: 180, filter: "(?i)日|jp|japan"}
  - {name: 美国节点, type: url-test, include-all: true, tolerance: 15, interval: 180, filter: "(?i)美|us|unitedstates|united states"}
  
  # 自动选择
  - {name: 自动选择, type: url-test, include-all: true, tolerance: 15, interval: 180, filter: "^((?!(直连)).)*$", lazy: true}
rules:
  - RULE-SET,private_domain,DIRECT
  - RULE-SET,ai,ChatGPT
  - RULE-SET,apple_domain,Apple
  - RULE-SET,proxylite,节点选择
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,microsoft_domain,Microsoft
  - RULE-SET,tiktok_domain,TikTok
  - RULE-SET,netflix_domain,NETFLIX
  - RULE-SET,paypal_domain,PayPal
  - RULE-SET,geolocation-!cn,节点选择
  - RULE-SET,cn_domain,全球直连
  - RULE-SET,netflix_ip,NETFLIX,no-resolve
  - RULE-SET,cn_ip,全球直连
  - MATCH,列表之外
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  kenzo: &kenzo {type: http, interval: 86400, behavior: domain, format: text}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  direct1: { <<: *class, url: "https://raw.githubusercontent.com/kenzok78/ruleset/refs/heads/main/clash/Direct.list" }
  proxylite: { <<: *kenzo, url: "https://raw.githubusercontent.com/kenzok78/ruleset/refs/heads/main/clash/Proxy.list" }
  ai: { <<: *kenzo, url: "https://raw.githubusercontent.com/kenzok78/ruleset/refs/heads/main/clash/AI.list" }
  youtube_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  netflix_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  microsoft_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  tiktok_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  netflix_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
